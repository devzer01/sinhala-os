0000:003E FA           CLI   
0000:003F 33C0         XOR    AX, AX ; AX = 0
0000:0041 8ED0         MOV    SS, AX ; SS = 0
0000:0043 BC007C       MOV    SP, 7C00 ; SP = 7C00 (stack pointer at the bottom)
0000:0046 16           PUSH   SS ; PUSH 0
0000:0047 07           POP    ES ; PUSH 0
0000:0048 BB7800       MOV    BX, 0078 ; buffer location
0000:004B 36           SS:    
0000:004C C537         LDS    SI, [BX]
0000:004E 1E           PUSH   DS
0000:004F 56           PUSH   SI
0000:0050 16           PUSH   SS
0000:0051 53           PUSH   BX
0000:0052 BF3E7C       MOV    DI, 7C3E
0000:0055 B90B00       MOV    CX, 000B ; copy 11 bytes
0000:0058 FC           CLD   
0000:0059 F3           REPZ  
0000:005A A4           MOVSB 
0000:005B 06           PUSH   ES
0000:005C 1F           POP    DS
0000:005D C645FE0F     MOV    BYTE PTR [DI-02], 0F
0000:0061 8B0E187C     MOV    CX, [7C18]
0000:0065 884DF9       MOV    [DI-07], CL
0000:0068 894702       MOV    [BX+02], AX
0000:006B C7073E7C     MOV    WORD PTR [BX], 7C3E
0000:006F FB           STI   
0000:0070 CD13         INT    13
0000:0072 7279         JB     00ED
0000:0074 33C0         XOR    AX, AX
0000:0076 3906137C     CMP    [7C13], AX
0000:007A 7408         JZ     0084
0000:007C 8B0E137C     MOV    CX, [7C13] ; copy sector count
0000:0080 890E207C     MOV    [7C20], CX ; it would have written something else if 0076 comparison was different
0000:0084 A0107C       MOV    AL, [7C10] ; writing sector count to fat32
0000:0087 F726167C     MUL    WORD PTR [7C16] ; multiply value in al with value in 7c16 sector per fat 9 (AL = 18)
0000:008B 03061C7C     ADD    AX, [7C1C] ; ignore
0000:008F 13161E7C     ADC    DX, [7C1E] ; 0 here means not fat32
0000:0093 03060E7C     ADD    AX, [7C0E] ;number of reserved sectors 
0000:0097 83D200       ADC    DX, +00
0000:009A A3507C       MOV    [7C50], AX ; 13 move to 7c50 (overwriting code) 
0000:009D 8916527C     MOV    [7C52], DX ; 00 to 
0000:00A1 A3497C       MOV    [7C49], AX ; 13 to 
0000:00A4 89164B7C     MOV    [7C4B], DX ; 00
0000:00A8 B82000       MOV    AX, 0020 ; move 0020 to ax
0000:00AB F726117C     MUL    WORD PTR [7C11] ; multiply 20 by e0 (max root directory entries) (7168)
0000:00AF 8B1E0B7C     MOV    BX, [7C0B] ; bytes per sector
0000:00B3 03C3         ADD    AX, BX; bytes per sector + root entries 1dff = 7680
0000:00B5 48           DEC    AX ; decrease by 1 (0 index)
0000:00B6 F7F3         DIV    BX ; entries per sector 
0000:00B8 0106497C     ADD    [7C49], AX ; 
0000:00BC 83164B7C00   ADC    WORD PTR [7C4B], +00 ; 000
0000:00C1 BB0005       MOV    BX, 0500 ; 5000
0000:00C4 8B16527C     MOV    DX, [7C52] ; 00
0000:00C8 A1507C       MOV    AX, [7C50] ; 13
0000:00CB E89200       CALL   0160 ; 
0000:00CE 721D         JB     00ED ; 
0000:00D0 B001         MOV    AL, 01 ; move 1; 
0000:00D2 E8AC00       CALL   0181 ; read sector from floppy
0000:00D5 7216         JB     00ED ; we are back here we have 1st sector at 0x500 (contains FAT)
0000:00D7 8BFB         MOV    DI, BX ; now DI set to fat table
0000:00D9 B90B00       MOV    CX, 000B ; set filename size to cx 
0000:00DC BEE67D       MOV    SI, 7DE6 ; filename IBMBIO
0000:00DF F3           REPZ   ; match the filename with entry from fat
0000:00E0 A6           CMPSB  ;   
0000:00E1 750A         JNZ    00ED ; if IBMBIO file not found as first entry in sector, display
; non system disk error; 
0000:00E3 8D7F20       LEA    DI, [BX+20]; get the next fat entry
0000:00E6 B90B00       MOV    CX, 000B ; set counter to 11 (file size)
0000:00E9 F3           REPZ ; match repeat 
0000:00EA A6           CMPSB 
0000:00EB 7418         JZ     0105 ; second entry should be IBMDOS.COM
0000:00ED BE9E7D       MOV    SI, 7D9E ; get the error message and call 0x7d52 
0000:00F0 E85F00       CALL   0152
0000:00F3 33C0         XOR    AX, AX
0000:00F5 CD16         INT    16
0000:00F7 5E           POP    SI
0000:00F8 1F           POP    DS
0000:00F9 8F04         POP    [SI]
0000:00FB 8F4402       POP    [SI+02]
0000:00FE CD19         INT    19
0000:0100 58           POP    AX
0000:0101 58           POP    AX
0000:0102 58           POP    AX
0000:0103 EBE8         JMP    00ED
0000:0105 8B471A       MOV    AX, [BX+1A] ;;entry point when both files found
0000:0108 48           DEC    AX
0000:0109 48           DEC    AX
0000:010A 8A1E0D7C     MOV    BL, [7C0D]
0000:010E 32FF         XOR    BH, BH
0000:0110 F7E3         MUL    BX
0000:0112 0306497C     ADD    AX, [7C49]
0000:0116 13164B7C     ADC    DX, [7C4B]
0000:011A BB0007       MOV    BX, 0700
0000:011D B90300       MOV    CX, 0003
0000:0120 50           PUSH   AX
0000:0121 52           PUSH   DX
0000:0122 51           PUSH   CX  ;not clear exactly what was pushed, assuming its to read the next sector data;
0000:0123 E83A00       CALL   0160
0000:0126 72D8         JB     0100 ; ax 0201 bx 700; cx = 10 ; 0100 (dx)
0000:0128 B001         MOV    AL, 01
0000:012A E85400       CALL   0181
0000:012D 59           POP    CX
0000:012E 5A           POP    DX
0000:012F 58           POP    AX
0000:0130 72BB         JB     00ED
0000:0132 050100       ADD    AX, 0001
0000:0135 83D200       ADC    DX, +00
0000:0138 031E0B7C     ADD    BX, [7C0B]
0000:013C E2E2         LOOP   0120
0000:013E 8A2E157C     MOV    CH, [7C15]
0000:0142 8A16247C     MOV    DL, [7C24]
0000:0146 8B1E497C     MOV    BX, [7C49]
0000:014A A14B7C       MOV    AX, [7C4B]
0000:014D EA00007000   JMP    0070:0000; execution of IBMBIO startes from 2nd segment
0000:0152 AC           LODSB 
0000:0153 0AC0         OR     AL, AL
0000:0155 7429         JZ     0180
0000:0157 B40E         MOV    AH, 0E
0000:0159 BB0700       MOV    BX, 0007
0000:015C CD10         INT    10
0000:015E EBF2         JMP    0152
0000:0160 3B16187C     CMP    DX, [7C18] ; call entry from 7ccb (0cb) BYTES PER SECTOR
0000:0164 7319         JNB    017F ; check if disk formatted 
0000:0166 F736187C     DIV    WORD PTR [7C18] ; sectors per track devided by 19 (previous calc)
0000:016A FEC2         INC    DL ; dl = 1  ax =  values is 1 
0000:016C 88164F7C     MOV    [7C4F], DL
0000:0170 33D2         XOR    DX, DX
0000:0172 F7361A7C     DIV    WORD PTR [7C1A] ;number of heads
0000:0176 8816257C     MOV    [7C25], DL ; sectors per track = 1
0000:017A A34D7C       MOV    [7C4D], AX ; 
0000:017D F8           CLC   
0000:017E C3           RET   ; back to 7cce
0000:017F F9           STC   
0000:0180 C3           RET   
0000:0181 B402         MOV    AH, 02     ;comes with al = 01, ah = 02
0000:0183 8B164D7C     MOV    DX, [7C4D] ;drive heads 00 00
0000:0187 B106         MOV    CL, 06 ; sector 6
0000:0189 D2E6         SHL    DH, CL ; 
0000:018B 0A364F7C     OR     DH, [7C4F] ; head 02 drive 00
0000:018F 8BCA         MOV    CX, DX ; cylinder 02; sector 00
0000:0191 86E9         XCHG   CH, CL ; sector 02 ; cylydner 00
0000:0193 8A16247C     MOV    DL, [7C24]
0000:0197 8A36257C     MOV    DH, [7C25] head1; drive 0
0000:019B CD13         INT    13 ; ah=02, sectors to read = 1 (al) sector = 2; head = 1
0000:019D C3           RET   ;
0000:019E 0D0A4E       db    "\r\nNon-System disk or disk error\r\nReplace and press any key when ready\r\n", 0
0000:01E6 49           db  "IBMBIO  COM"
0000:01F1 42           db  "IBMDOS  COM"
0000:01FF AA55         dw  0xAA55 
